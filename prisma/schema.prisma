// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Example {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Review        Review[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Review {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  aroma_quality   Int
  aroma_intensity Int

  acidity_quality   Int
  acidity_intensity Int

  sweetness_quality   Int
  sweetness_intensity Int

  body_quality   Int
  body_intensity Int

  finish_quality   Int
  finish_intensity Int

  notes String?
  brew  Brew

  author   User   @relation(fields: [authorId], references: [id])
  authorId String
  coffee   Coffee @relation(fields: [coffeeId], references: [id])
  coffeeId String
}

enum Brew {
  Espresso
  Pourover
  Frenchpress
  Aeropress
  Coldbrew
}

model Coffee {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name    String
  roast   String
  reviews Review[]
}

model Location {
  id   String @id @default(cuid())
  name String
}
